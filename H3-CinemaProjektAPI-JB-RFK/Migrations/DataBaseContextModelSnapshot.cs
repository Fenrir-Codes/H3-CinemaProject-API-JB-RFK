// <auto-generated />
using System;
using H3_CinemaProjektAPI_JB_RFK.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace H3_CinemaProjektAPI_JB_RFK.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("H3_CinemaProjektAPI_JB_RFK.Model.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("DiscountCoupon")
                        .HasColumnType("bit");

                    b.Property<int>("HallId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int>("SeatNumberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("BookingId");

                    b.HasIndex("MovieId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("H3_CinemaProjektAPI_JB_RFK.Model.Directors", b =>
                {
                    b.Property<int>("DirectorsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DirectorsId");

                    b.ToTable("Directors");
                });

            modelBuilder.Entity("H3_CinemaProjektAPI_JB_RFK.Model.Hall", b =>
                {
                    b.Property<int>("HallId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("HAllName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeatNumberId")
                        .HasColumnType("int");

                    b.HasKey("HallId");

                    b.HasIndex("BookingId");

                    b.ToTable("Hall");
                });

            modelBuilder.Entity("H3_CinemaProjektAPI_JB_RFK.Model.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DirectorsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Duration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MovieId");

                    b.HasIndex("DirectorsId");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("H3_CinemaProjektAPI_JB_RFK.Model.PaymentDetails", b =>
                {
                    b.Property<int>("PaymentDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("CardType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Paid")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.HasKey("PaymentDetailsId");

                    b.HasIndex("BookingId");

                    b.ToTable("PaymentDetails");
                });

            modelBuilder.Entity("H3_CinemaProjektAPI_JB_RFK.Model.Profile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("ProfileId");

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("H3_CinemaProjektAPI_JB_RFK.Model.SeatNumber", b =>
                {
                    b.Property<int>("SeatNumberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HallId")
                        .HasColumnType("int");

                    b.Property<int>("SeatColumn")
                        .HasColumnType("int");

                    b.Property<int>("SeatRow")
                        .HasColumnType("int");

                    b.HasKey("SeatNumberId");

                    b.HasIndex("HallId");

                    b.ToTable("SeatNumber");
                });

            modelBuilder.Entity("H3_CinemaProjektAPI_JB_RFK.Model.Booking", b =>
                {
                    b.HasOne("H3_CinemaProjektAPI_JB_RFK.Model.Movie", null)
                        .WithMany("Bookings")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("H3_CinemaProjektAPI_JB_RFK.Model.Profile", null)
                        .WithMany("Bookings")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("H3_CinemaProjektAPI_JB_RFK.Model.Hall", b =>
                {
                    b.HasOne("H3_CinemaProjektAPI_JB_RFK.Model.Booking", null)
                        .WithMany("Halls")
                        .HasForeignKey("BookingId");
                });

            modelBuilder.Entity("H3_CinemaProjektAPI_JB_RFK.Model.Movie", b =>
                {
                    b.HasOne("H3_CinemaProjektAPI_JB_RFK.Model.Directors", null)
                        .WithMany("Movies")
                        .HasForeignKey("DirectorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("H3_CinemaProjektAPI_JB_RFK.Model.PaymentDetails", b =>
                {
                    b.HasOne("H3_CinemaProjektAPI_JB_RFK.Model.Booking", null)
                        .WithMany("PaymentDetails")
                        .HasForeignKey("BookingId");
                });

            modelBuilder.Entity("H3_CinemaProjektAPI_JB_RFK.Model.SeatNumber", b =>
                {
                    b.HasOne("H3_CinemaProjektAPI_JB_RFK.Model.Hall", null)
                        .WithMany("SeatNumbers")
                        .HasForeignKey("HallId");
                });

            modelBuilder.Entity("H3_CinemaProjektAPI_JB_RFK.Model.Booking", b =>
                {
                    b.Navigation("Halls");

                    b.Navigation("PaymentDetails");
                });

            modelBuilder.Entity("H3_CinemaProjektAPI_JB_RFK.Model.Directors", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("H3_CinemaProjektAPI_JB_RFK.Model.Hall", b =>
                {
                    b.Navigation("SeatNumbers");
                });

            modelBuilder.Entity("H3_CinemaProjektAPI_JB_RFK.Model.Movie", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("H3_CinemaProjektAPI_JB_RFK.Model.Profile", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
